const Nebulas = require('nebulas');
const fs = require('fs');
const consts = require('../static/consts');
let conf = null;

try{
  conf = require('./config.json');
}catch (e) {
  console.log('failed to load config.json. Try to run "yarn run generateconfig" first.');
  process.exit(1);
}

if(conf.version !==  consts.CONF_VERSION){
  console.log('config outdated.');
  process.exit(1);
}

const contractSource = fs.readFileSync('./contract.js').toString();
const apiUrl = "https://testnet.nebulas.io";

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function run(){
  let account = new Nebulas.Account();
  account.setPrivateKey(conf.account.privateKey);

  let neb = new Nebulas.Neb();
  neb.setRequest(new Nebulas.HttpRequest(apiUrl));
  let nebState = await neb.api.getNebState();
  let accountState = await neb.api.getAccountState(account.getAddressString());

  let options = {
    from : account,
    to : account.getAddressString(),
    nonce : parseInt(accountState.nonce) + 1,
    gasPrice: 1000000,
    gasLimit: 2000000,
    contract : {
      source : contractSource,
      sourceType : 'js',
      args : '[0]',
      function : 'save'
    },
    chainID : nebState.chain_id
  };

  let transaction = new Nebulas.Transaction(options);
  transaction.signTransaction();

  let payload = {
    data : transaction.toProtoString()
  };
  let response = await neb.api.sendRawTransaction(payload);
  console.log(response);

  let attempt = 0;
  while(1===1){
    let receipt = await neb.api.getTransactionReceipt({hash:response.txhash});

    if(receipt.status === 0){
      console.log('Deploy failed');
      console.log(receipt);
      process.exit(1);
    }else if(receipt.status === 1){
      console.log(`Transaction no longer pending. Receipt:`);
      console.log(receipt);

      if(receipt.contract_address && receipt.contract_address.length > 0){
        let toSource = require('tosource');
        //write to the config file
        let content = "/*AUTOGENERATED BY DEPLOY SCRIPT. DO NOT EDIT*/\n";
        let obj = {
          apiUrl : apiUrl,
          contract : receipt.contract_address
        };
        content += "neb_contract=" + toSource(obj) + ";";
        fs.writeFileSync('../static/settings.js', content);



        options.to = receipt.contract_address;
        options.contract = {
          function: "changeOwner",
          args: '["n1S5JNP13pnoyswKbGtrtE3Bexz6pbtKaPj"]'
        };
        options.nonce++;
        transaction = new Nebulas.Transaction(options);
        transaction.signTransaction();

        let payload = {
          data : transaction.toProtoString()
        };
        let response = await neb.api.sendRawTransaction(payload);
        console.log(response);
      }

      return;
    }else if(receipt.status === 2){
      attempt++;
      console.log(`Transaction pending... attempt: ${attempt} - ${new Date()}`);
      if(attempt === 1)
        console.log(receipt);
      await sleep(3000);
    }
  }
}

run();
